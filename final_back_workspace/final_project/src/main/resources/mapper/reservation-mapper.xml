<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.or.iei.myPage.reservation.model.dao.ReservationDao">

  <!-- 본인이 대출중인 도서인지 확인 -->
  <select id="selfReservateCheck">
  select count(*) from tbl_lent_book
   where lent_call_no = #{reservationCallNo} and lent_member_no = #{reservationMemberNo} and actual_return_date is null
  </select>

  <!-- 도서 예약 -->
  <insert id='reservateBook' parameterType="kr.or.iei.myPage.reservation.model.dto.Reservation">
  insert into tbl_reservation values(
	to_char(sysdate,'yymmdd') || lpad(seq_reservation.nextval, 4,'0'),	#{reservationMemberNo},	#{reservationCallNo}, to_char(sysdate, 'yyyymmdd'), null
  )
  </insert>
  
  <!-- 도서 예약 후 도서 예약상태 변경 -->
  <update id="updateBookIsReservated" parameterType="string">
  	update tbl_book set can_lend = 'R' where call_no = #{_parameter}
  </update>
  
  <!-- 도서 예약 후 대출도서테이블의 예약상태 변경 -->
  <update id="updateLentBookIsReservated" parameterType="string">
  update tbl_lent_book set reservation = 'T' where lent_call_no = #{_parameter}
  </update>
  
  
  
  
  <!-- 예약 갯수 조회 -->
  <select id="selectReservationCount" parameterType="kr.or.iei.myPage.reservation.model.dto.Reservation" resultType="_int">
  	select count(*) from tbl_reservation where reservation_member_no = #{reservationMemberNo}
  </select>
  
  <!-- 예약 목록 조회 -->
  <select id="selectReservationList" parameterType="map" resultType="kr.or.iei.myPage.reservation.model.dto.Reservation">
  	 SELECT reservationNo, reservationMemberNo ,reservationCallNo ,title, author, publisher, reservationDate, status, canLend
  FROM (
    SELECT rownum AS rnum, a.*
    FROM (
      SELECT 
        r.reservation_no as reservationNo,
        r.reservation_member_no as reservationMemberNo,
        r.reservation_call_no as reservationCallNo,
        b.title_info AS title,
        b.author_info AS author,
        b.pub_info AS publisher,
        r.reservation_date as reservationDate,
        CASE 
          WHEN r.actual_return_date IS NULL THEN '예약중'
          ELSE '대출 가능'
        END AS status,
        b.can_lend as canLend
      FROM tbl_reservation r
      JOIN tbl_book b ON r.reservation_call_no = b.call_no
      where r.reservation_member_no = #{memberNo}
      ORDER BY r.reservation_date DESC
    ) a
  )
  WHERE rnum BETWEEN #{pageInfo.start} AND #{pageInfo.end}
  </select>
  
  <!-- 도서예약 취소 시 대출도서 테이블 상태 변경 -->
  <update id="updateLentBookReservation" parameterType="string">
  update tbl_lent_book set reservation = 'F' where lent_call_no = #{_parameter}
  </update>
  
  <!-- 책 대출 상태 변경 : R -> L 로 (대출중) -->
  <update id="updateBookCanLendToL" parameterType="string">
  	update tbl_book set can_lend = 'L' where call_no = #{_parameter}
  </update>
  
   <!-- 책 대출 상태 변경 : R -> T 로 (대출가능) -->
  <update id="updateBookCanLendToT" parameterType="string">
 	update tbl_book set can_lend = 'T' where call_no = #{_parameter}
  </update>
  
  <!-- 예약 취소하기 -->
  <delete id="deleteReservation" parameterType="_long">
  	delete from tbl_reservation where reservation_no = #{_parameter} 
  </delete>
</mapper>
